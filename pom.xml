<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>one.microstream</groupId>
	<artifactId>microstream-parent</artifactId>
	<version>09.00.00-MS-GA-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>MicroStream</name>
	<description>Microstream Project</description>
	<url>https://microstream.one</url>

	<organization>
		<name>MicroStream Software</name>
		<url>https://microstream.one</url>
	</organization>

	<developers>
		<developer>
			<name>MicroStream Software</name>
			<url>https://microstream.one</url>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Eclipse Public License - v 2.0</name>
			<url>https://www.eclipse.org/legal/epl-2.0/</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.compilerId>javac</maven.compiler.compilerId>
		<maven.version.minimum>3.8.1</maven.version.minimum>
		<maven.java.version.minimum>11</maven.java.version.minimum>
		<org.eclipse.jdt.ecj.version>3.29.0</org.eclipse.jdt.ecj.version>
		<license.inceptionYear>2019</license.inceptionYear>
		<license.licenseName>epl_v2</license.licenseName>
		<license.licenceFile>${basedir}/LICENSE</license.licenceFile>
		<api.version>8.0</api.version>
		<javadoc.failed.on.error>false</javadoc.failed.on.error>
		<failsafe.rerunFailingTestsCount>2</failsafe.rerunFailingTestsCount>
		<surefire.rerunFailingTestsCount>2</surefire.rerunFailingTestsCount>
	</properties>

	<modules>
		<module>afs</module>
		<module>base</module>
		<module>cache</module>
		<module>communication</module>
		<module>configuration</module>
		<module>persistence</module>
		<module>storage</module>
		<module>integrations</module>
		<module>examples</module>
		<module>codegen</module>
	</modules>

	<distributionManagement>
		<repository>
			<id>ossrh</id>
			<name>Sonytype Nexus Releases</name>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>microstream-repo</id>
			<url>https://repo.microstream.one/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git@github.com:microstream-one/microstream.git</connection>
		<developerConnection>scm:git:git@github.com:microstream-one/microstream.git</developerConnection>
		<url>https://github.com/microstream-one/microstream</url>
		<tag>HEAD</tag>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.32</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>5.8.2</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>5.8.2</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>4.3.1</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>4.3.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.11.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>5.1.9</version>
					<extensions>true</extensions>
					<executions>
						<execution>
							<id>bundle-manifest</id>
							<phase>process-classes</phase>
							<goals>
								<goal>manifest</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<instructions>
							<Export-Package>one.microstream*;-split-package:=merge-first</Export-Package>
							<Import-Package>*</Import-Package>
							<DynamicImport-Package>*</DynamicImport-Package>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.3.0</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
							<manifestEntries>
								<built-by>${project.organization.name}</built-by>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <configuration>
								<archive>
									<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
									<manifestEntries>
										<built-by>${project.organization.name}</built-by>
									</manifestEntries>
								</archive>
							</configuration>
                        </execution>
                    </executions>
                </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.5.0</version>
					<configuration>
						<doclint>none</doclint>
						<failOnError>false</failOnError>
						<notree>true</notree>
						<source>8</source>
						<doctitle>MicroStream API</doctitle>
						<windowtitle>MicroStream API</windowtitle>
						<stylesheetfile>${maven.multiModuleProjectDirectory}/etc/styles/javadoc-stylesheet.css</stylesheetfile>
						<archive>
							<manifestEntries>
								<built-by>${project.organization.name}</built-by>
							</manifestEntries>
						</archive>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>2.1.0</version>
					<configuration>
						<overrideFile>false</overrideFile>
						<includes>
							<include>**/*.java</include>
						</includes>
						<ignoreNoFileToScan>true</ignoreNoFileToScan>
					</configuration>
					<executions>
						<execution>
							<id>add-license</id>
							<phase>process-sources</phase>
							<goals>
								<goal>update-file-header</goal>
								<goal>update-project-license</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<!-- Prevent gpg from using pinentry programs -->
						<gpgArguments>
							<arg>--pinentry-mode</arg>
							<arg>loopback</arg>
						</gpgArguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.3.0</version>
					<executions>
						<execution>
							<id>enforce-env</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${maven.version.minimum}</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${maven.java.version.minimum}</version>
									</requireJavaVersion>
								</rules>
								<fail>true</fail>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>4.0.0-M8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.cyclonedx</groupId>
					<artifactId>cyclonedx-maven-plugin</artifactId>
					<version>2.7.9</version>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<goals>
								<goal>makeAggregateBom</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<projectType>library</projectType>
						<schemaVersion>1.4</schemaVersion>
						<includeBomSerialNumber>true</includeBomSerialNumber>
						<includeCompileScope>true</includeCompileScope>
						<includeProvidedScope>true</includeProvidedScope>
						<includeRuntimeScope>true</includeRuntimeScope>
						<includeSystemScope>true</includeSystemScope>
						<includeTestScope>false</includeTestScope>
						<includeLicenseText>false</includeLicenseText>
						<outputReactorProjects>true</outputReactorProjects>
						<outputFormat>all</outputFormat>
						<outputName>Microstream-Sbom</outputName>
						<outputDirectory>${project.build.directory}/sbom</outputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.gradle</groupId>
					<artifactId>gradle-enterprise-maven-extension</artifactId>
					<version>1.18</version>
					<configuration>
						<gradleEnterprise>
							<normalization>
								<runtimeClassPath>
									<metaInf>
										<ignoredAttributes>
											<ignore>Bnd-LastModified</ignore>
											<ignore>Bundle-Version</ignore>
											<ignore>Class-Path</ignore>
										</ignoredAttributes>
									</metaInf>
									<ignoredFiles>
										<ignoredFile>META-INF/Microstream-Sbom.json</ignoredFile>
										<ignoredFile>META-INF/Microstream-Sbom.xml</ignoredFile>
										<ignoredFile>META-INF/maven/one.microstream/*/pom.xml</ignoredFile>
									</ignoredFiles>
									<propertiesNormalizations>
										<propetiesNormalization>
											<path>one/microstream/**/pom.properties</path>
											<ignoredProperties>
												<ignore>version</ignore>
											</ignoredProperties>
										</propetiesNormalization>
									</propertiesNormalizations>
								</runtimeClassPath>
							</normalization>
						</gradleEnterprise>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>production</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.cyclonedx</groupId>
						<artifactId>cyclonedx-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-meta-inf-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/sbom/</directory>
											<includes>
												<include>*.json</include>
												<include>*.xml</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>javadoc-aggregate</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.3.0</version>
						<configuration>
							<doclint>html,syntax,accessibility,reference,missing</doclint>
							<failOnError>${javadoc.failed.on.error}</failOnError>
							<notree>true</notree>
							<additionalOptions>-html5</additionalOptions>
							<source>8</source>
							<doctitle>MicroStream API ${api.version}</doctitle>
							<windowtitle>MicroStream API ${api.version}</windowtitle>
							<stylesheetfile>${maven.multiModuleProjectDirectory}/etc/styles/javadoc-stylesheet.css</stylesheetfile>
							<javadocExecutable>${javadoc.executable}</javadocExecutable>
							<excludePackageNames>one.microstream.examples.*,echoexample</excludePackageNames>
							<archive>
								<manifestEntries>
									<built-by>${project.organization.name}</built-by>
								</manifestEntries>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>aggregate</id>
								<goals>
									<goal>aggregate</goal>
								</goals>
								<phase>site</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>module-info-check</id>
			<activation>
				<file>
					<exists>src/main/java</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-files-exist</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireFilesExist>
											<message>The module-info is not present</message>
											<files>
												<file>${project.basedir}/src/main/java/module-info.java</file>
											</files>
										</requireFilesExist>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
