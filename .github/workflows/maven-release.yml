 
# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish package to the Maven Central Repository and GitHub Packages
on:
  release:
    types: [created]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG    
      - uses: actions/checkout@v3
      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD             
      - name: Make a release
        run: mvn -Pdeploy -Pproduction --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.REPO_PASSWORD }}

      #java 17 build
      - uses: actions/checkout@v3
      - name: Set up Java 17 for publishing to Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Build with java 17
        run: |
          mvn -pl persistence/binary-jdk17 clean source:jar install -am -B
          mvn -pl integrations/spring-boot3 clean source:jar install -am -B
      - name: Deploy module build with java 17        
        run: |
          mvn -Pdeploy -pl persistence/binary-jdk17 -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy
          mvn -Pdeploy -pl integrations/spring-boot3 -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.REPO_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.REPO_PASSWORD }}
